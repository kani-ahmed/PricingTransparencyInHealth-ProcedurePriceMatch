name: Deploy Flask Application to EC2

on:
  push:
    branches:
      - main

env:
  EC2_SSH_HOST: ec2-3-211-246-7.compute-1.amazonaws.com  # EC2 SSH Host
  EC2_USER: ubuntu
  TARGET_DIRECTORY: /var/www/html  # Target directory to deploy

jobs:
  setup-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'  # Specify the Python version you are using

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Lint with flake8
        run: |
            # stop the build if there are Python syntax errors or undefined names
            flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics --exclude=./.venv,./.pip
            # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
            flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics --exclude=./.venv,./.pip

      - name: Copy application files to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ env.EC2_SSH_HOST }}
          username: ${{ env.EC2_USER }}
          key: ${{ secrets.AWS_DEPLOY_KEY }}
          source: "."
          target: "${{ env.TARGET_DIRECTORY }}"

      - name: Restart application service
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.EC2_SSH_HOST }}
          username: ${{ env.EC2_USER }}
          key: ${{ secrets.AWS_DEPLOY_KEY }}
          script: |
            cd ${{ env.TARGET_DIRECTORY }}
            # Optionally use a script to activate a virtual environment if you use one
            # source venv/bin/activate
            sudo systemctl restart myapp.service  # Assuming you have a systemd service setup for your app

